{
	"swagger": "2.0",
	"info": {
		"title": "Trixionary API"
	},
	"paths": {
		"/sports": {
			"get": {
				"description": "Paginates sports",
				"operationId": "sport-paginate",
				"responses": {
					"200": {
						"description": "Array of sports",
						"schema": {
							"$ref": "#/definitions/PagedSports"
						}
					}
				}
			},
			"post": {
				"description": "Creates a sport",
				"operationId": "sport-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new sport",
						"schema": {
							"$ref": "#/definitions/WritableSport"
						}
					}
				],
				"responses": {
					"201": {
						"description": "sport created"
					}
				}
			}
		},
		"/sports/{id}": {
			"get": {
				"description": "Reads a sport",
				"operationId": "sport-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the sport",
						"schema": {
							"$ref": "#/definitions/Sport"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a sport",
				"operationId": "sport-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "sport updated",
						"schema": {
							"$ref": "#/definitions/Sport"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a sport",
				"operationId": "sport-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "sport deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/sports/{id}/relationship/objects": {
			"get": {
				"description": "Reads the relationship of sport to object",
				"operationId": "sport-to-object-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds object as relationship to sport",
				"operationId": "sport-to-object-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Object",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of sport to object",
				"operationId": "sport-to-object-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Object",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes object as relationship to sport",
				"operationId": "sport-to-object-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/sports/{id}/relationship/positions": {
			"get": {
				"description": "Reads the relationship of sport to position",
				"operationId": "sport-to-position-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Position from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds position as relationship to sport",
				"operationId": "sport-to-position-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Position",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Position from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of sport to position",
				"operationId": "sport-to-position-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Position",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Position from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes position as relationship to sport",
				"operationId": "sport-to-position-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Position from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/sports/{id}/relationship/skills": {
			"get": {
				"description": "Reads the relationship of sport to skill",
				"operationId": "sport-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to sport",
				"operationId": "sport-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of sport to skill",
				"operationId": "sport-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to sport",
				"operationId": "sport-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/sports/{id}/relationship/groups": {
			"get": {
				"description": "Reads the relationship of sport to group",
				"operationId": "sport-to-group-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds group as relationship to sport",
				"operationId": "sport-to-group-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of sport to group",
				"operationId": "sport-to-group-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes group as relationship to sport",
				"operationId": "sport-to-group-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The sport id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from sport",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No sport found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/objects": {
			"get": {
				"description": "Paginates objects",
				"operationId": "object-paginate",
				"responses": {
					"200": {
						"description": "Array of objects",
						"schema": {
							"$ref": "#/definitions/PagedObjects"
						}
					}
				}
			},
			"post": {
				"description": "Creates an object",
				"operationId": "object-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new object",
						"schema": {
							"$ref": "#/definitions/WritableObject"
						}
					}
				],
				"responses": {
					"201": {
						"description": "object created"
					}
				}
			}
		},
		"/objects/{id}": {
			"get": {
				"description": "Reads an object",
				"operationId": "object-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the object",
						"schema": {
							"$ref": "#/definitions/Object"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an object",
				"operationId": "object-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "object updated",
						"schema": {
							"$ref": "#/definitions/Object"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an object",
				"operationId": "object-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "object deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/objects/{id}/relationship/sport": {
			"get": {
				"description": "Reads the relationship of object to sport",
				"operationId": "object-to-sport-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of object to sport",
				"operationId": "object-to-sport-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Sport",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/positions": {
			"get": {
				"description": "Paginates positions",
				"operationId": "position-paginate",
				"responses": {
					"200": {
						"description": "Array of positions",
						"schema": {
							"$ref": "#/definitions/PagedPositions"
						}
					}
				}
			},
			"post": {
				"description": "Creates a position",
				"operationId": "position-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new position",
						"schema": {
							"$ref": "#/definitions/WritablePosition"
						}
					}
				],
				"responses": {
					"201": {
						"description": "position created"
					}
				}
			}
		},
		"/positions/{id}": {
			"get": {
				"description": "Reads a position",
				"operationId": "position-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the position",
						"schema": {
							"$ref": "#/definitions/Position"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a position",
				"operationId": "position-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "position updated",
						"schema": {
							"$ref": "#/definitions/Position"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a position",
				"operationId": "position-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "position deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/positions/{id}/relationship/sport": {
			"get": {
				"description": "Reads the relationship of position to sport",
				"operationId": "position-to-sport-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of position to sport",
				"operationId": "position-to-sport-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Sport",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/positions/{id}/relationship/skills": {
			"get": {
				"description": "Reads the relationship of position to skill",
				"operationId": "position-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to position",
				"operationId": "position-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of position to skill",
				"operationId": "position-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to position",
				"operationId": "position-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills": {
			"get": {
				"description": "Paginates skills",
				"operationId": "skill-paginate",
				"responses": {
					"200": {
						"description": "Array of skills",
						"schema": {
							"$ref": "#/definitions/PagedSkills"
						}
					}
				}
			},
			"post": {
				"description": "Creates a skill",
				"operationId": "skill-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new skill",
						"schema": {
							"$ref": "#/definitions/WritableSkill"
						}
					}
				],
				"responses": {
					"201": {
						"description": "skill created"
					}
				}
			}
		},
		"/skills/{id}": {
			"get": {
				"description": "Reads a skill",
				"operationId": "skill-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the skill",
						"schema": {
							"$ref": "#/definitions/Skill"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a skill",
				"operationId": "skill-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "skill updated",
						"schema": {
							"$ref": "#/definitions/Skill"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a skill",
				"operationId": "skill-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "skill deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/sport": {
			"get": {
				"description": "Reads the relationship of skill to sport",
				"operationId": "skill-to-sport-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to sport",
				"operationId": "skill-to-sport-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Sport",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/variations": {
			"get": {
				"description": "Reads the relationship of skill to variation",
				"operationId": "skill-to-variation-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Variation from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds variation as relationship to skill",
				"operationId": "skill-to-variation-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Variation",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Variation from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to variation",
				"operationId": "skill-to-variation-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Variation",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Variation from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes variation as relationship to skill",
				"operationId": "skill-to-variation-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Variation from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/variation-of": {
			"get": {
				"description": "Reads the relationship of skill to variation_of",
				"operationId": "skill-to-variation_of-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve VariationOf from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to variation_of",
				"operationId": "skill-to-variation_of-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates VariationOf",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve VariationOf from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/multiples": {
			"get": {
				"description": "Reads the relationship of skill to multiple",
				"operationId": "skill-to-multiple-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Multiple from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds multiple as relationship to skill",
				"operationId": "skill-to-multiple-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Multiple",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Multiple from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to multiple",
				"operationId": "skill-to-multiple-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Multiple",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Multiple from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes multiple as relationship to skill",
				"operationId": "skill-to-multiple-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Multiple from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/multiple-of": {
			"get": {
				"description": "Reads the relationship of skill to multiple_of",
				"operationId": "skill-to-multiple_of-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve MultipleOf from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to multiple_of",
				"operationId": "skill-to-multiple_of-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates MultipleOf",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve MultipleOf from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/start-position": {
			"get": {
				"description": "Reads the relationship of skill to start_position",
				"operationId": "skill-to-start_position-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve StartPosition from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to start_position",
				"operationId": "skill-to-start_position-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates StartPosition",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve StartPosition from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/end-position": {
			"get": {
				"description": "Reads the relationship of skill to end_position",
				"operationId": "skill-to-end_position-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve EndPosition from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to end_position",
				"operationId": "skill-to-end_position-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates EndPosition",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve EndPosition from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/featured-picture": {
			"get": {
				"description": "Reads the relationship of skill to featured_picture",
				"operationId": "skill-to-featured_picture-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedPicture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to featured_picture",
				"operationId": "skill-to-featured_picture-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates FeaturedPicture",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedPicture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/kstruktur-root": {
			"get": {
				"description": "Reads the relationship of skill to kstruktur_root",
				"operationId": "skill-to-kstruktur_root-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve KstrukturRoot from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to kstruktur_root",
				"operationId": "skill-to-kstruktur_root-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates KstrukturRoot",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve KstrukturRoot from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/function-phase-root": {
			"get": {
				"description": "Reads the relationship of skill to function_phase_root",
				"operationId": "skill-to-function_phase_root-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhaseRoot from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to function_phase_root",
				"operationId": "skill-to-function_phase_root-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates FunctionPhaseRoot",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhaseRoot from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/skills": {
			"get": {
				"description": "Reads the relationship of skill to skill",
				"operationId": "skill-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to skill",
				"operationId": "skill-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to skill",
				"operationId": "skill-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to skill",
				"operationId": "skill-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/groups": {
			"get": {
				"description": "Reads the relationship of skill to group",
				"operationId": "skill-to-group-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds group as relationship to skill",
				"operationId": "skill-to-group-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to group",
				"operationId": "skill-to-group-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes group as relationship to skill",
				"operationId": "skill-to-group-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/pictures": {
			"get": {
				"description": "Reads the relationship of skill to picture",
				"operationId": "skill-to-picture-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Picture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds picture as relationship to skill",
				"operationId": "skill-to-picture-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Picture",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Picture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to picture",
				"operationId": "skill-to-picture-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Picture",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Picture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes picture as relationship to skill",
				"operationId": "skill-to-picture-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Picture from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/videos": {
			"get": {
				"description": "Reads the relationship of skill to video",
				"operationId": "skill-to-video-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds video as relationship to skill",
				"operationId": "skill-to-video-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Video",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to video",
				"operationId": "skill-to-video-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Video",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes video as relationship to skill",
				"operationId": "skill-to-video-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/references": {
			"get": {
				"description": "Reads the relationship of skill to reference",
				"operationId": "skill-to-reference-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds reference as relationship to skill",
				"operationId": "skill-to-reference-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Reference",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to reference",
				"operationId": "skill-to-reference-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Reference",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes reference as relationship to skill",
				"operationId": "skill-to-reference-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/kstrukturs": {
			"get": {
				"description": "Reads the relationship of skill to kstruktur",
				"operationId": "skill-to-kstruktur-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Kstruktur from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds kstruktur as relationship to skill",
				"operationId": "skill-to-kstruktur-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Kstruktur from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to kstruktur",
				"operationId": "skill-to-kstruktur-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Kstruktur from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes kstruktur as relationship to skill",
				"operationId": "skill-to-kstruktur-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Kstruktur from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/function-phases": {
			"get": {
				"description": "Reads the relationship of skill to function_phase",
				"operationId": "skill-to-function_phase-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhase from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds function_phase as relationship to skill",
				"operationId": "skill-to-function_phase-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds FunctionPhase",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhase from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to function_phase",
				"operationId": "skill-to-function_phase-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates FunctionPhase",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhase from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes function_phase as relationship to skill",
				"operationId": "skill-to-function_phase-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FunctionPhase from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/skill-versions": {
			"get": {
				"description": "Reads the relationship of skill to skill_version",
				"operationId": "skill-to-skill_version-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve SkillVersion from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill_version as relationship to skill",
				"operationId": "skill-to-skill_version-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds SkillVersion",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve SkillVersion from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to skill_version",
				"operationId": "skill-to-skill_version-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates SkillVersion",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve SkillVersion from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill_version as relationship to skill",
				"operationId": "skill-to-skill_version-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve SkillVersion from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups": {
			"get": {
				"description": "Paginates groups",
				"operationId": "group-paginate",
				"responses": {
					"200": {
						"description": "Array of groups",
						"schema": {
							"$ref": "#/definitions/PagedGroups"
						}
					}
				}
			},
			"post": {
				"description": "Creates a group",
				"operationId": "group-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new group",
						"schema": {
							"$ref": "#/definitions/WritableGroup"
						}
					}
				],
				"responses": {
					"201": {
						"description": "group created"
					}
				}
			}
		},
		"/groups/{id}": {
			"get": {
				"description": "Reads a group",
				"operationId": "group-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the group",
						"schema": {
							"$ref": "#/definitions/Group"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a group",
				"operationId": "group-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "group updated",
						"schema": {
							"$ref": "#/definitions/Group"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a group",
				"operationId": "group-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "group deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups/{id}/relationship/sport": {
			"get": {
				"description": "Reads the relationship of group to sport",
				"operationId": "group-to-sport-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of group to sport",
				"operationId": "group-to-sport-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Sport",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Sport from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups/{id}/relationship/skills": {
			"get": {
				"description": "Reads the relationship of group to skill",
				"operationId": "group-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to group",
				"operationId": "group-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of group to skill",
				"operationId": "group-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to group",
				"operationId": "group-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/pictures": {
			"get": {
				"description": "Paginates pictures",
				"operationId": "picture-paginate",
				"responses": {
					"200": {
						"description": "Array of pictures",
						"schema": {
							"$ref": "#/definitions/PagedPictures"
						}
					}
				}
			},
			"post": {
				"description": "Creates a picture",
				"operationId": "picture-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new picture",
						"schema": {
							"$ref": "#/definitions/WritablePicture"
						}
					}
				],
				"responses": {
					"201": {
						"description": "picture created"
					}
				}
			}
		},
		"/pictures/{id}": {
			"get": {
				"description": "Reads a picture",
				"operationId": "picture-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the picture",
						"schema": {
							"$ref": "#/definitions/Picture"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a picture",
				"operationId": "picture-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "picture updated",
						"schema": {
							"$ref": "#/definitions/Picture"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a picture",
				"operationId": "picture-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "picture deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/pictures/{id}/relationship/featured-skills": {
			"get": {
				"description": "Reads the relationship of picture to featured_skill",
				"operationId": "picture-to-featured_skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds featured_skill as relationship to picture",
				"operationId": "picture-to-featured_skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds FeaturedSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of picture to featured_skill",
				"operationId": "picture-to-featured_skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates FeaturedSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes featured_skill as relationship to picture",
				"operationId": "picture-to-featured_skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/pictures/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of picture to skill",
				"operationId": "picture-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of picture to skill",
				"operationId": "picture-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/videos": {
			"get": {
				"description": "Paginates videos",
				"operationId": "video-paginate",
				"responses": {
					"200": {
						"description": "Array of videos",
						"schema": {
							"$ref": "#/definitions/PagedVideos"
						}
					}
				}
			},
			"post": {
				"description": "Creates a video",
				"operationId": "video-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new video",
						"schema": {
							"$ref": "#/definitions/WritableVideo"
						}
					}
				],
				"responses": {
					"201": {
						"description": "video created"
					}
				}
			}
		},
		"/videos/{id}": {
			"get": {
				"description": "Reads a video",
				"operationId": "video-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the video",
						"schema": {
							"$ref": "#/definitions/Video"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a video",
				"operationId": "video-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "video updated",
						"schema": {
							"$ref": "#/definitions/Video"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a video",
				"operationId": "video-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "video deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/videos/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of video to skill",
				"operationId": "video-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from video",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of video to skill",
				"operationId": "video-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from video",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/videos/{id}/relationship/reference": {
			"get": {
				"description": "Reads the relationship of video to reference",
				"operationId": "video-to-reference-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from video",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of video to reference",
				"operationId": "video-to-reference-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The video id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Reference",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Reference from video",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No video found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/references": {
			"get": {
				"description": "Paginates references",
				"operationId": "reference-paginate",
				"responses": {
					"200": {
						"description": "Array of references",
						"schema": {
							"$ref": "#/definitions/PagedReferences"
						}
					}
				}
			},
			"post": {
				"description": "Creates a reference",
				"operationId": "reference-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new reference",
						"schema": {
							"$ref": "#/definitions/WritableReference"
						}
					}
				],
				"responses": {
					"201": {
						"description": "reference created"
					}
				}
			}
		},
		"/references/{id}": {
			"get": {
				"description": "Reads a reference",
				"operationId": "reference-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the reference",
						"schema": {
							"$ref": "#/definitions/Reference"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a reference",
				"operationId": "reference-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "reference updated",
						"schema": {
							"$ref": "#/definitions/Reference"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a reference",
				"operationId": "reference-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "reference deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/references/{id}/relationship/videos": {
			"get": {
				"description": "Reads the relationship of reference to video",
				"operationId": "reference-to-video-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds video as relationship to reference",
				"operationId": "reference-to-video-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Video",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of reference to video",
				"operationId": "reference-to-video-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Video",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes video as relationship to reference",
				"operationId": "reference-to-video-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Video from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/references/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of reference to skill",
				"operationId": "reference-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of reference to skill",
				"operationId": "reference-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The reference id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from reference",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No reference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/kstrukturs": {
			"get": {
				"description": "Paginates kstrukturs",
				"operationId": "kstruktur-paginate",
				"responses": {
					"200": {
						"description": "Array of kstrukturs",
						"schema": {
							"$ref": "#/definitions/PagedKstrukturs"
						}
					}
				}
			},
			"post": {
				"description": "Creates a kstruktur",
				"operationId": "kstruktur-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new kstruktur",
						"schema": {
							"$ref": "#/definitions/WritableKstruktur"
						}
					}
				],
				"responses": {
					"201": {
						"description": "kstruktur created"
					}
				}
			}
		},
		"/kstrukturs/{id}": {
			"get": {
				"description": "Reads a kstruktur",
				"operationId": "kstruktur-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the kstruktur",
						"schema": {
							"$ref": "#/definitions/Kstruktur"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a kstruktur",
				"operationId": "kstruktur-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "kstruktur updated",
						"schema": {
							"$ref": "#/definitions/Kstruktur"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a kstruktur",
				"operationId": "kstruktur-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "kstruktur deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/kstrukturs/{id}/relationship/root-skills": {
			"get": {
				"description": "Reads the relationship of kstruktur to root_skill",
				"operationId": "kstruktur-to-root_skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds root_skill as relationship to kstruktur",
				"operationId": "kstruktur-to-root_skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds RootSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of kstruktur to root_skill",
				"operationId": "kstruktur-to-root_skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates RootSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes root_skill as relationship to kstruktur",
				"operationId": "kstruktur-to-root_skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/kstrukturs/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of kstruktur to skill",
				"operationId": "kstruktur-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of kstruktur to skill",
				"operationId": "kstruktur-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The kstruktur id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from kstruktur",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No kstruktur found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/function-phases": {
			"get": {
				"description": "Paginates function_phases",
				"operationId": "function_phase-paginate",
				"responses": {
					"200": {
						"description": "Array of function_phases",
						"schema": {
							"$ref": "#/definitions/PagedFunctionPhases"
						}
					}
				}
			},
			"post": {
				"description": "Creates a function_phase",
				"operationId": "function_phase-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new function_phase",
						"schema": {
							"$ref": "#/definitions/WritableFunctionPhase"
						}
					}
				],
				"responses": {
					"201": {
						"description": "function_phase created"
					}
				}
			}
		},
		"/function-phases/{id}": {
			"get": {
				"description": "Reads a function_phase",
				"operationId": "function_phase-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the function_phase",
						"schema": {
							"$ref": "#/definitions/FunctionPhase"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a function_phase",
				"operationId": "function_phase-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "function_phase updated",
						"schema": {
							"$ref": "#/definitions/FunctionPhase"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a function_phase",
				"operationId": "function_phase-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "function_phase deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/function-phases/{id}/relationship/root-skills": {
			"get": {
				"description": "Reads the relationship of function_phase to root_skill",
				"operationId": "function_phase-to-root_skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds root_skill as relationship to function_phase",
				"operationId": "function_phase-to-root_skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds RootSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of function_phase to root_skill",
				"operationId": "function_phase-to-root_skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates RootSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes root_skill as relationship to function_phase",
				"operationId": "function_phase-to-root_skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve RootSkill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/function-phases/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of function_phase to skill",
				"operationId": "function_phase-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of function_phase to skill",
				"operationId": "function_phase-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The function_phase id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from function_phase",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No function_phase found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skill-versions": {
			"get": {
				"description": "Paginates skill_versions",
				"operationId": "skill_version-paginate",
				"responses": {
					"200": {
						"description": "Array of skill_versions",
						"schema": {
							"$ref": "#/definitions/PagedSkillVersions"
						}
					}
				}
			},
			"post": {
				"description": "Creates a skill_version",
				"operationId": "skill_version-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new skill_version",
						"schema": {
							"$ref": "#/definitions/WritableSkillVersion"
						}
					}
				],
				"responses": {
					"201": {
						"description": "skill_version created"
					}
				}
			}
		},
		"/skill-versions/{id}": {
			"get": {
				"description": "Reads a skill_version",
				"operationId": "skill_version-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill_version id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the skill_version",
						"schema": {
							"$ref": "#/definitions/SkillVersion"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill_version found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a skill_version",
				"operationId": "skill_version-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill_version id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "skill_version updated",
						"schema": {
							"$ref": "#/definitions/SkillVersion"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill_version found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a skill_version",
				"operationId": "skill_version-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill_version id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "skill_version deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill_version found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skill-versions/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of skill_version to skill",
				"operationId": "skill_version-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill_version id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill_version",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill_version found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill_version to skill",
				"operationId": "skill_version-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill_version id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from skill_version",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill_version found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/positions/{id}/relationship/skill": {
			"get": {
				"description": "Reads the relationship of position to skill",
				"operationId": "position-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to position",
				"operationId": "position-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of position to skill",
				"operationId": "position-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to position",
				"operationId": "position-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The position id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from position",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No position found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/pictures/{id}/relationship/featured-skill": {
			"get": {
				"description": "Reads the relationship of picture to featured_skill",
				"operationId": "picture-to-featured_skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of picture to featured_skill",
				"operationId": "picture-to-featured_skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates FeaturedSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds featured_skill as relationship to picture",
				"operationId": "picture-to-featured_skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds FeaturedSkill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes featured_skill as relationship to picture",
				"operationId": "picture-to-featured_skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The picture id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve FeaturedSkill from picture",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No picture found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/objects/{id}/relationship/skills": {
			"get": {
				"description": "Reads the relationship of object to skill",
				"operationId": "object-to-skill-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of object to skill",
				"operationId": "object-to-skill-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds skill as relationship to object",
				"operationId": "object-to-skill-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Skill",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes skill as relationship to object",
				"operationId": "object-to-skill-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Skill from object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/object": {
			"get": {
				"description": "Reads the relationship of skill to object",
				"operationId": "skill-to-object-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to object",
				"operationId": "skill-to-object-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Object",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/descendents": {
			"get": {
				"description": "Reads the relationship of skill to descendent",
				"operationId": "skill-to-descendent-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Descendent from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to descendent",
				"operationId": "skill-to-descendent-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Descendent",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Descendent from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds descendent as relationship to skill",
				"operationId": "skill-to-descendent-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Descendent",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Descendent from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes descendent as relationship to skill",
				"operationId": "skill-to-descendent-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Descendent from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/skills/{id}/relationship/parts": {
			"get": {
				"description": "Reads the relationship of skill to part",
				"operationId": "skill-to-part-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Part from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of skill to part",
				"operationId": "skill-to-part-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Part",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Part from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds part as relationship to skill",
				"operationId": "skill-to-part-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Part",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Part from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes part as relationship to skill",
				"operationId": "skill-to-part-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The skill id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Part from skill",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No skill found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"PagedSports": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Sport"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableSport": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"label": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"athlete_label": {
									"type": "string"
								},
								"object_slug": {
									"type": "string"
								},
								"object_label": {
									"type": "string"
								},
								"skill_slug": {
									"type": "string"
								},
								"skill_label": {
									"type": "string"
								},
								"skill_plural_label": {
									"type": "string"
								},
								"group_slug": {
									"type": "string"
								},
								"group_label": {
									"type": "string"
								},
								"group_plural_label": {
									"type": "string"
								},
								"transition_slug": {
									"type": "string"
								},
								"transition_label": {
									"type": "string"
								},
								"transition_plural_label": {
									"type": "string"
								},
								"position_slug": {
									"type": "string"
								},
								"position_label": {
									"type": "string"
								},
								"feature_composition": {
									"type": "boolean"
								},
								"is_default": {
									"type": "boolean"
								},
								"title": {
									"type": "string"
								},
								"transitions_slug": {
									"type": "string"
								},
								"feature_tester": {
									"type": "boolean"
								},
								"object_plural_label": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"objects": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"positions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Sport": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"label": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"athlete_label": {
									"type": "string"
								},
								"object_slug": {
									"type": "string"
								},
								"object_label": {
									"type": "string"
								},
								"skill_slug": {
									"type": "string"
								},
								"skill_label": {
									"type": "string"
								},
								"skill_plural_label": {
									"type": "string"
								},
								"group_slug": {
									"type": "string"
								},
								"group_label": {
									"type": "string"
								},
								"group_plural_label": {
									"type": "string"
								},
								"transition_slug": {
									"type": "string"
								},
								"transition_label": {
									"type": "string"
								},
								"transition_plural_label": {
									"type": "string"
								},
								"position_slug": {
									"type": "string"
								},
								"position_label": {
									"type": "string"
								},
								"feature_composition": {
									"type": "boolean"
								},
								"is_default": {
									"type": "boolean"
								},
								"title": {
									"type": "string"
								},
								"transitions_slug": {
									"type": "string"
								},
								"feature_tester": {
									"type": "boolean"
								},
								"object_plural_label": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"objects": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"positions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedObjects": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Object"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableObject": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								},
								"description": {
									"type": "string"
								},
								"fixed": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Object": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								},
								"description": {
									"type": "string"
								},
								"fixed": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedPositions": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Position"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritablePosition": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								},
								"description": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Position": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								},
								"description": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedSkills": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Skill"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableSkill": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"sport_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alternative_name": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"history": {
									"type": "string"
								},
								"is_translation": {
									"type": "boolean"
								},
								"is_rotation": {
									"type": "boolean"
								},
								"is_cyclic": {
									"type": "boolean"
								},
								"longitudinal_flags": {
									"type": "integer"
								},
								"latitudinal_flags": {
									"type": "integer"
								},
								"transversal_flags": {
									"type": "integer"
								},
								"movement_description": {
									"type": "string"
								},
								"variation_of_id": {
									"type": "integer"
								},
								"start_position_id": {
									"type": "integer"
								},
								"end_position_id": {
									"type": "integer"
								},
								"is_composite": {
									"type": "boolean"
								},
								"is_multiple": {
									"type": "boolean"
								},
								"multiple_of_id": {
									"type": "integer"
								},
								"multiplier": {
									"type": "integer"
								},
								"generation": {
									"type": "integer"
								},
								"importance": {
									"type": "integer"
								},
								"generation_ids": {
									"type": "string"
								},
								"picture_id": {
									"type": "integer"
								},
								"kstruktur_id": {
									"type": "integer"
								},
								"function_phase_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"version_created_at": {
									"type": "string"
								},
								"version_comment": {
									"type": "string"
								},
								"object_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"variations": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"variation-of": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"multiples": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"multiple-of": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"start-position": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"end-position": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"featured-picture": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"kstruktur-root": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"function-phase-root": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"pictures": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"videos": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"references": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"kstrukturs": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"function-phases": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill-versions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"object": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"descendents": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parts": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Skill": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"sport_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alternative_name": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"history": {
									"type": "string"
								},
								"is_translation": {
									"type": "boolean"
								},
								"is_rotation": {
									"type": "boolean"
								},
								"is_cyclic": {
									"type": "boolean"
								},
								"longitudinal_flags": {
									"type": "integer"
								},
								"latitudinal_flags": {
									"type": "integer"
								},
								"transversal_flags": {
									"type": "integer"
								},
								"movement_description": {
									"type": "string"
								},
								"variation_of_id": {
									"type": "integer"
								},
								"start_position_id": {
									"type": "integer"
								},
								"end_position_id": {
									"type": "integer"
								},
								"is_composite": {
									"type": "boolean"
								},
								"is_multiple": {
									"type": "boolean"
								},
								"multiple_of_id": {
									"type": "integer"
								},
								"multiplier": {
									"type": "integer"
								},
								"generation": {
									"type": "integer"
								},
								"importance": {
									"type": "integer"
								},
								"generation_ids": {
									"type": "string"
								},
								"picture_id": {
									"type": "integer"
								},
								"kstruktur_id": {
									"type": "integer"
								},
								"function_phase_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"version_created_at": {
									"type": "string"
								},
								"version_comment": {
									"type": "string"
								},
								"object_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"variations": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"variation-of": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"multiples": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"multiple-of": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"start-position": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"end-position": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"featured-picture": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"kstruktur-root": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"function-phase-root": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"pictures": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"videos": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"references": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"kstrukturs": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"function-phases": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill-versions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"object": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"descendents": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parts": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedGroups": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Group"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableGroup": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Group": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"sport_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sport": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedPictures": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Picture"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritablePicture": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"photographer": {
									"type": "string"
								},
								"photographer_id": {
									"type": "integer"
								},
								"movender": {
									"type": "string"
								},
								"movender_id": {
									"type": "integer"
								},
								"uploader_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"featured-skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"featured-skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Picture": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"photographer": {
									"type": "string"
								},
								"photographer_id": {
									"type": "integer"
								},
								"movender": {
									"type": "string"
								},
								"movender_id": {
									"type": "integer"
								},
								"uploader_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"featured-skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"featured-skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedVideos": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Video"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableVideo": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"is_tutorial": {
									"type": "boolean"
								},
								"movender": {
									"type": "string"
								},
								"movender_id": {
									"type": "integer"
								},
								"uploader_id": {
									"type": "integer"
								},
								"skill_id": {
									"type": "integer"
								},
								"reference_id": {
									"type": "integer"
								},
								"poster_url": {
									"type": "string"
								},
								"provider": {
									"type": "string"
								},
								"provider_id": {
									"type": "string"
								},
								"player_url": {
									"type": "string"
								},
								"width": {
									"type": "integer"
								},
								"height": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"reference": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Video": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"is_tutorial": {
									"type": "boolean"
								},
								"movender": {
									"type": "string"
								},
								"movender_id": {
									"type": "integer"
								},
								"uploader_id": {
									"type": "integer"
								},
								"skill_id": {
									"type": "integer"
								},
								"reference_id": {
									"type": "integer"
								},
								"poster_url": {
									"type": "string"
								},
								"provider": {
									"type": "string"
								},
								"provider_id": {
									"type": "string"
								},
								"player_url": {
									"type": "string"
								},
								"width": {
									"type": "integer"
								},
								"height": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								},
								"reference": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedReferences": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Reference"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableReference": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								},
								"year": {
									"type": "integer"
								},
								"publisher": {
									"type": "string"
								},
								"journal": {
									"type": "string"
								},
								"number": {
									"type": "string"
								},
								"school": {
									"type": "string"
								},
								"author": {
									"type": "string"
								},
								"edition": {
									"type": "string"
								},
								"volume": {
									"type": "string"
								},
								"address": {
									"type": "string"
								},
								"editor": {
									"type": "string"
								},
								"howpublished": {
									"type": "string"
								},
								"note": {
									"type": "string"
								},
								"booktitle": {
									"type": "string"
								},
								"pages": {
									"type": "string"
								},
								"url": {
									"type": "string"
								},
								"lastchecked": {
									"type": "string"
								},
								"managed": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"videos": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Reference": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								},
								"year": {
									"type": "integer"
								},
								"publisher": {
									"type": "string"
								},
								"journal": {
									"type": "string"
								},
								"number": {
									"type": "string"
								},
								"school": {
									"type": "string"
								},
								"author": {
									"type": "string"
								},
								"edition": {
									"type": "string"
								},
								"volume": {
									"type": "string"
								},
								"address": {
									"type": "string"
								},
								"editor": {
									"type": "string"
								},
								"howpublished": {
									"type": "string"
								},
								"note": {
									"type": "string"
								},
								"booktitle": {
									"type": "string"
								},
								"pages": {
									"type": "string"
								},
								"url": {
									"type": "string"
								},
								"lastchecked": {
									"type": "string"
								},
								"managed": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"videos": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedKstrukturs": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Kstruktur"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableKstruktur": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"root-skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Kstruktur": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"root-skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedFunctionPhases": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FunctionPhase"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableFunctionPhase": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"root-skills": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"FunctionPhase": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"skill_id": {
									"type": "integer"
								},
								"title": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"root-skills": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"PagedSkillVersions": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SkillVersion"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableSkillVersion": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"sport_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alternative_name": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"history": {
									"type": "string"
								},
								"is_translation": {
									"type": "boolean"
								},
								"is_rotation": {
									"type": "boolean"
								},
								"is_cyclic": {
									"type": "boolean"
								},
								"longitudinal_flags": {
									"type": "integer"
								},
								"latitudinal_flags": {
									"type": "integer"
								},
								"transversal_flags": {
									"type": "integer"
								},
								"movement_description": {
									"type": "string"
								},
								"variation_of_id": {
									"type": "integer"
								},
								"start_position_id": {
									"type": "integer"
								},
								"end_position_id": {
									"type": "integer"
								},
								"is_composite": {
									"type": "boolean"
								},
								"is_multiple": {
									"type": "boolean"
								},
								"multiple_of_id": {
									"type": "integer"
								},
								"multiplier": {
									"type": "integer"
								},
								"generation": {
									"type": "integer"
								},
								"importance": {
									"type": "integer"
								},
								"generation_ids": {
									"type": "string"
								},
								"picture_id": {
									"type": "integer"
								},
								"kstruktur_id": {
									"type": "integer"
								},
								"function_phase_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"version_created_at": {
									"type": "string"
								},
								"version_comment": {
									"type": "string"
								},
								"variation_of_id_version": {
									"type": "integer"
								},
								"multiple_of_id_version": {
									"type": "integer"
								},
								"kk_trixionary_skill_ids": {
									"type": "array"
								},
								"kk_trixionary_skill_versions": {
									"type": "array"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"skill": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"SkillVersion": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"attributes": {
							"type": "object",
							"properties": {
								"sport_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alternative_name": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"history": {
									"type": "string"
								},
								"is_translation": {
									"type": "boolean"
								},
								"is_rotation": {
									"type": "boolean"
								},
								"is_cyclic": {
									"type": "boolean"
								},
								"longitudinal_flags": {
									"type": "integer"
								},
								"latitudinal_flags": {
									"type": "integer"
								},
								"transversal_flags": {
									"type": "integer"
								},
								"movement_description": {
									"type": "string"
								},
								"variation_of_id": {
									"type": "integer"
								},
								"start_position_id": {
									"type": "integer"
								},
								"end_position_id": {
									"type": "integer"
								},
								"is_composite": {
									"type": "boolean"
								},
								"is_multiple": {
									"type": "boolean"
								},
								"multiple_of_id": {
									"type": "integer"
								},
								"multiplier": {
									"type": "integer"
								},
								"generation": {
									"type": "integer"
								},
								"importance": {
									"type": "integer"
								},
								"generation_ids": {
									"type": "string"
								},
								"picture_id": {
									"type": "integer"
								},
								"kstruktur_id": {
									"type": "integer"
								},
								"function_phase_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"version_created_at": {
									"type": "string"
								},
								"version_comment": {
									"type": "string"
								},
								"variation_of_id_version": {
									"type": "integer"
								},
								"multiple_of_id_version": {
									"type": "integer"
								},
								"kk_trixionary_skill_ids": {
									"type": "array"
								},
								"kk_trixionary_skill_versions": {
									"type": "array"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"skill": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"Errors": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Error"
			}
		},
		"Error": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"detail": {
					"type": "string"
				},
				"meta": {
					"type": "object"
				}
			}
		},
		"PagedMeta": {
			"type": "object",
			"properties": {
				"total": {
					"type": "integer"
				},
				"first": {
					"type": "integer"
				},
				"next": {
					"type": "integer"
				},
				"previous": {
					"type": "integer"
				},
				"last": {
					"type": "integer"
				}
			}
		},
		"ResourceIdentifier": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		}
	},
	"tags": [
		{
			"name": "gossi.trixionary"
		}
	]
}